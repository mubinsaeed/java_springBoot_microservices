current video 32


How the microservices can communicate
1) Using the RestTemplate
2) Using the service discovery
3) Using the openFeign


Why service discovery is needed?
Suppose that there are two instances of fraud module the customer module need to know about all the fraud modules
and its ports. A better approach would be to have a service discovery like Eureka server and client(microservices)

Through lookup they can do that

ISSUE with this: If the main eureka server i.e service discovery is down there is no way for microservices to communicate

---------------------------Using the restTemplate------------------------
 fraudResponse response = restTemplate.getForObject("http://localhost:8081/api/fraud-check/{id}", fraudResponse.class,
                customer.getId());

 Here we are consuming the service from fraud
 However the issue is that if there are multiple instances of fraud module we cannot hardcode the api as localhost:8080
 There could be multiple ports that run the instances


 RESOLVE: It by using the eureka server i.e service discovery
 The call changes to  fraudResponse response = restTemplate.getForObject("http://fraud:8081/api/fraud-check/{id}", fraudResponse.class,
                                     customer.getId());


------------------Refactoriing the code by OPEN FEIGN To create a client ------------------------
Why needed?
    Previously we need to create a redundant fraudResponse interface in both customer and fraud package
     fraudResponse response = restTemplate.getForObject("http://fraud/api/fraud-check/{id}", fraudResponse.class,
                    customer.getId());
We would have needed the above code to access the url but using previous technique we have to duplicate the Response Class again

Better approach is to create an open feign client

Post req at url: localhost:8080/api/v1/customers
Request Body: {
              "firstName":"ABC",
              "lastName":"CBA",
              "email" : "abc@gmail.com"
              }

Making this request would result in populating the fields of customer , notifications and fraud table.